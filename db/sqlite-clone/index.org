#+title: SQLite Clone

* [[file:../../readme.org][Purpose]]
** sub purposes
*** How does a database work?

* Repo
https://cstack.github.io/db_tutorial/

* Why sqlite?
because it is designed to be =small= with fewer features than MySQL ro PostgreSQL, so better to understanding to beginner
(setq doom-theme 'catppuccin)
* Prerequisite
Knowledge about syntax of C

* Architecture
[[file:./imgs/sqlite-arch.gif]]


[[file:./imgs/sqlite-arch1.gif]]

A query goes through a chain of components in order to retrieve or modify data.

** Front-end
The input to the front-end is SQL query.
The output is sqlite virtual machine bytecode (essentially a compiled program that can operate on the database)

*** Tokenizer
*** Parser
*** Code generator

** Back-end
*** virtual machine
Takes bytecode generated by the front-end as instructions and perform on one or more tables or indexes, each of which is stored in a data structure called a =B-tree=

The VM is essentially =a big switch statement= on the type of bytecode instruction.

*** B-tree (structure)
Consists of many nodes.
Each node is one page in length.
It can =retrieve= a page from disk or =save= it back to disk by issuing commands to the pager

*** pager
Receives commands to read or write pages of data.

It also keeps a cache of recently-accessed pages in memory, and determines when those pages need to be written back to disk

*** os interface
The layer that differs depending on which operating system sqlite was compiled for.

Production database support multiple platforms

* Build Project
** [[file:./repl.org][Introduction and Setting up the REPL]]
** [[file:./sql-comp-vm.org][World's Simplest SQL Compiler and Virtual Machine]]
** [[file:./database.org][An In-Memory, Append-Only, Single-Table Database]]
